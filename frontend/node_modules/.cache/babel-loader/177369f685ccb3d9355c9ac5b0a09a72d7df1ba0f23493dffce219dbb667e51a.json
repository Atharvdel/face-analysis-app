{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\athar\\\\OneDrive\\\\Desktop\\\\face-analysis-app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport SunglassesOverlay from './components/SunglassesOverlay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [preview, setPreview] = useState(null);\n  const [analysis, setAnalysis] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [recommendedSunglasses, setRecommendedSunglasses] = useState(null);\n  const [showSunglasses, setShowSunglasses] = useState(false);\n\n  // Handle file selection\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    if (file) {\n      setSelectedFile(file);\n\n      // Create a preview of the image\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setPreview(reader.result);\n      };\n      reader.readAsDataURL(file);\n\n      // Reset states\n      setAnalysis('');\n      setRecommendedSunglasses(null);\n      setShowSunglasses(false);\n    }\n  };\n\n  // Handle image analysis\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!selectedFile) {\n      setError('Please select an image first');\n      return;\n    }\n    setLoading(true);\n    setError('');\n    try {\n      const formData = new FormData();\n      formData.append('file', selectedFile);\n      const response = await fetch('http://localhost:8000/api/analyze-image', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error('Failed to analyze image');\n      }\n      const data = await response.json();\n      setAnalysis(data.analysis);\n\n      // Extract recommended sunglasses style from analysis\n      // This is a simplified example - you'll need to parse the actual response\n      const analysisText = data.analysis.toLowerCase();\n      if (analysisText.includes('round face')) {\n        setRecommendedSunglasses('square');\n      } else if (analysisText.includes('square face')) {\n        setRecommendedSunglasses('round');\n      } else if (analysisText.includes('heart face')) {\n        setRecommendedSunglasses('aviator');\n      } else if (analysisText.includes('oval face')) {\n        setRecommendedSunglasses('cat-eye');\n      } else {\n        setRecommendedSunglasses('round'); // Default\n      }\n    } catch (err) {\n      setError(err.message || 'An error occurred during analysis');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Toggle sunglasses overlay\n  const toggleSunglasses = () => {\n    setShowSunglasses(!showSunglasses);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"preview-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Image Preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"preview-content\",\n          children: preview ? showSunglasses && recommendedSunglasses ? /*#__PURE__*/_jsxDEV(SunglassesOverlay, {\n            faceImage: preview,\n            recommendedStyle: recommendedSunglasses\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n            src: preview,\n            alt: \"Preview\",\n            className: \"image-preview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"upload-placeholder\",\n            children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              fill: \"none\",\n              viewBox: \"0 0 24 24\",\n              stroke: \"currentColor\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: \"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Upload an image to see preview\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), recommendedSunglasses && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sunglasses-controls\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `sunglasses-toggle ${showSunglasses ? 'active' : ''}`,\n            onClick: toggleSunglasses,\n            children: showSunglasses ? 'Remove Sunglasses' : 'Try Recommended Sunglasses'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"DwKoT17skoauZO7is/i5BznwlIU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","SunglassesOverlay","jsxDEV","_jsxDEV","App","_s","selectedFile","setSelectedFile","preview","setPreview","analysis","setAnalysis","loading","setLoading","error","setError","recommendedSunglasses","setRecommendedSunglasses","showSunglasses","setShowSunglasses","handleFileChange","event","file","target","files","reader","FileReader","onloadend","result","readAsDataURL","handleSubmit","preventDefault","formData","FormData","append","response","fetch","method","body","ok","Error","data","json","analysisText","toLowerCase","includes","err","message","toggleSunglasses","className","children","fileName","_jsxFileName","lineNumber","columnNumber","faceImage","recommendedStyle","src","alt","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","onClick","_c","$RefreshReg$"],"sources":["C:/Users/athar/OneDrive/Desktop/face-analysis-app/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport SunglassesOverlay from './components/SunglassesOverlay';\n\nfunction App() {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [preview, setPreview] = useState(null);\n  const [analysis, setAnalysis] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [recommendedSunglasses, setRecommendedSunglasses] = useState(null);\n  const [showSunglasses, setShowSunglasses] = useState(false);\n  \n  // Handle file selection\n  const handleFileChange = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      setSelectedFile(file);\n      \n      // Create a preview of the image\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setPreview(reader.result);\n      };\n      reader.readAsDataURL(file);\n      \n      // Reset states\n      setAnalysis('');\n      setRecommendedSunglasses(null);\n      setShowSunglasses(false);\n    }\n  };\n  \n  // Handle image analysis\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    \n    if (!selectedFile) {\n      setError('Please select an image first');\n      return;\n    }\n    \n    setLoading(true);\n    setError('');\n    \n    try {\n      const formData = new FormData();\n      formData.append('file', selectedFile);\n      \n      const response = await fetch('http://localhost:8000/api/analyze-image', {\n        method: 'POST',\n        body: formData,\n      });\n      \n      if (!response.ok) {\n        throw new Error('Failed to analyze image');\n      }\n      \n      const data = await response.json();\n      setAnalysis(data.analysis);\n      \n      // Extract recommended sunglasses style from analysis\n      // This is a simplified example - you'll need to parse the actual response\n      const analysisText = data.analysis.toLowerCase();\n      if (analysisText.includes('round face')) {\n        setRecommendedSunglasses('square');\n      } else if (analysisText.includes('square face')) {\n        setRecommendedSunglasses('round');\n      } else if (analysisText.includes('heart face')) {\n        setRecommendedSunglasses('aviator');\n      } else if (analysisText.includes('oval face')) {\n        setRecommendedSunglasses('cat-eye');\n      } else {\n        setRecommendedSunglasses('round'); // Default\n      }\n      \n    } catch (err) {\n      setError(err.message || 'An error occurred during analysis');\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  // Toggle sunglasses overlay\n  const toggleSunglasses = () => {\n    setShowSunglasses(!showSunglasses);\n  };\n  \n  return (\n    <div className=\"App\">\n      {/* Header and upload section remain the same */}\n      \n      <div className=\"results-container\">\n        <div className=\"preview-container\">\n          <h2>Image Preview</h2>\n          <div className=\"preview-content\">\n            {preview ? (\n              showSunglasses && recommendedSunglasses ? (\n                <SunglassesOverlay \n                  faceImage={preview} \n                  recommendedStyle={recommendedSunglasses} \n                />\n              ) : (\n                <img src={preview} alt=\"Preview\" className=\"image-preview\" />\n              )\n            ) : (\n              <div className=\"upload-placeholder\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n                </svg>\n                <p>Upload an image to see preview</p>\n              </div>\n            )}\n          </div>\n          \n          {recommendedSunglasses && (\n            <div className=\"sunglasses-controls\">\n              <button \n                className={`sunglasses-toggle ${showSunglasses ? 'active' : ''}`}\n                onClick={toggleSunglasses}\n              >\n                {showSunglasses ? 'Remove Sunglasses' : 'Try Recommended Sunglasses'}\n              </button>\n            </div>\n          )}\n        </div>\n        \n        {/* Analysis container remains the same */}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,OAAOC,iBAAiB,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACiB,qBAAqB,EAAEC,wBAAwB,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EACxE,MAAM,CAACmB,cAAc,EAAEC,iBAAiB,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;;EAE3D;EACA,MAAMqB,gBAAgB,GAAIC,KAAK,IAAK;IAClC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClC,IAAIF,IAAI,EAAE;MACRf,eAAe,CAACe,IAAI,CAAC;;MAErB;MACA,MAAMG,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;MAC/BD,MAAM,CAACE,SAAS,GAAG,MAAM;QACvBlB,UAAU,CAACgB,MAAM,CAACG,MAAM,CAAC;MAC3B,CAAC;MACDH,MAAM,CAACI,aAAa,CAACP,IAAI,CAAC;;MAE1B;MACAX,WAAW,CAAC,EAAE,CAAC;MACfM,wBAAwB,CAAC,IAAI,CAAC;MAC9BE,iBAAiB,CAAC,KAAK,CAAC;IAC1B;EACF,CAAC;;EAED;EACA,MAAMW,YAAY,GAAG,MAAOT,KAAK,IAAK;IACpCA,KAAK,CAACU,cAAc,CAAC,CAAC;IAEtB,IAAI,CAACzB,YAAY,EAAE;MACjBS,QAAQ,CAAC,8BAA8B,CAAC;MACxC;IACF;IAEAF,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,EAAE,CAAC;IAEZ,IAAI;MACF,MAAMiB,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAE5B,YAAY,CAAC;MAErC,MAAM6B,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyC,EAAE;QACtEC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEN;MACR,CAAC,CAAC;MAEF,IAAI,CAACG,QAAQ,CAACI,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;MAC5C;MAEA,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;MAClC/B,WAAW,CAAC8B,IAAI,CAAC/B,QAAQ,CAAC;;MAE1B;MACA;MACA,MAAMiC,YAAY,GAAGF,IAAI,CAAC/B,QAAQ,CAACkC,WAAW,CAAC,CAAC;MAChD,IAAID,YAAY,CAACE,QAAQ,CAAC,YAAY,CAAC,EAAE;QACvC5B,wBAAwB,CAAC,QAAQ,CAAC;MACpC,CAAC,MAAM,IAAI0B,YAAY,CAACE,QAAQ,CAAC,aAAa,CAAC,EAAE;QAC/C5B,wBAAwB,CAAC,OAAO,CAAC;MACnC,CAAC,MAAM,IAAI0B,YAAY,CAACE,QAAQ,CAAC,YAAY,CAAC,EAAE;QAC9C5B,wBAAwB,CAAC,SAAS,CAAC;MACrC,CAAC,MAAM,IAAI0B,YAAY,CAACE,QAAQ,CAAC,WAAW,CAAC,EAAE;QAC7C5B,wBAAwB,CAAC,SAAS,CAAC;MACrC,CAAC,MAAM;QACLA,wBAAwB,CAAC,OAAO,CAAC,CAAC,CAAC;MACrC;IAEF,CAAC,CAAC,OAAO6B,GAAG,EAAE;MACZ/B,QAAQ,CAAC+B,GAAG,CAACC,OAAO,IAAI,mCAAmC,CAAC;IAC9D,CAAC,SAAS;MACRlC,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;EACA,MAAMmC,gBAAgB,GAAGA,CAAA,KAAM;IAC7B7B,iBAAiB,CAAC,CAACD,cAAc,CAAC;EACpC,CAAC;EAED,oBACEf,OAAA;IAAK8C,SAAS,EAAC,KAAK;IAAAC,QAAA,eAGlB/C,OAAA;MAAK8C,SAAS,EAAC,mBAAmB;MAAAC,QAAA,eAChC/C,OAAA;QAAK8C,SAAS,EAAC,mBAAmB;QAAAC,QAAA,gBAChC/C,OAAA;UAAA+C,QAAA,EAAI;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtBnD,OAAA;UAAK8C,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAC7B1C,OAAO,GACNU,cAAc,IAAIF,qBAAqB,gBACrCb,OAAA,CAACF,iBAAiB;YAChBsD,SAAS,EAAE/C,OAAQ;YACnBgD,gBAAgB,EAAExC;UAAsB;YAAAmC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzC,CAAC,gBAEFnD,OAAA;YAAKsD,GAAG,EAAEjD,OAAQ;YAACkD,GAAG,EAAC,SAAS;YAACT,SAAS,EAAC;UAAe;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAC7D,gBAEDnD,OAAA;YAAK8C,SAAS,EAAC,oBAAoB;YAAAC,QAAA,gBACjC/C,OAAA;cAAKwD,KAAK,EAAC,4BAA4B;cAACC,IAAI,EAAC,MAAM;cAACC,OAAO,EAAC,WAAW;cAACC,MAAM,EAAC,cAAc;cAAAZ,QAAA,eAC3F/C,OAAA;gBAAM4D,aAAa,EAAC,OAAO;gBAACC,cAAc,EAAC,OAAO;gBAACC,WAAW,EAAE,CAAE;gBAACC,CAAC,EAAC;cAA2J;gBAAAf,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChO,CAAC,eACNnD,OAAA;cAAA+C,QAAA,EAAG;YAA8B;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClC;QACN;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,EAELtC,qBAAqB,iBACpBb,OAAA;UAAK8C,SAAS,EAAC,qBAAqB;UAAAC,QAAA,eAClC/C,OAAA;YACE8C,SAAS,EAAE,qBAAqB/B,cAAc,GAAG,QAAQ,GAAG,EAAE,EAAG;YACjEiD,OAAO,EAAEnB,gBAAiB;YAAAE,QAAA,EAEzBhC,cAAc,GAAG,mBAAmB,GAAG;UAA4B;YAAAiC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9D;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACjD,EAAA,CA/HQD,GAAG;AAAAgE,EAAA,GAAHhE,GAAG;AAiIZ,eAAeA,GAAG;AAAC,IAAAgE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}